# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - main
      - 'v1.*'
  pull_request:
    branches:
      - main
      - 'v1.*'
    types: [opened, reopened, synchronize]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  path_filter:
    runs-on: ubuntu-latest
    outputs:
      test1: ${{ steps.filter.outputs.test1 }}
      test2: ${{ steps.filter.outputs.test2 }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'push'
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            test1:
              - 'test1/**'
            test2:
              - 'test2/**'
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    if: ${{ needs.path_filter.outputs.test1 == 'true' }} or ${{ needs.path_filter.outputs.test2 == 'true' }}
    strategy:
      matrix:
        test_type:
          - test1
          - test2
    steps:
      - uses: actions/checkout@v2
      - name: List files in directory
        run: |
          dir ${{ matrix.test_type }}
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Save should_not_skip output
        if: always()
        run: |
          mkdir -p ./pr
          echo -n ${{ steps.filter.outputs.integration_tests  == 'false' }} > ./pr/skipped
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: pr
          path: pr/
      - uses: actions/checkout@v2
      - run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: |
          pytest . --junit-xml unit_test_results.xml
      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: |
            unit_test_results.xml
